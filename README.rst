*******
Disimpy
*******

Disimpy is a tool for generating synthetic diffusion-weighted MR signals
that can be useful in the development and validation of new data acquisition
and analysis methods. The synthetic data is generated by Monte Carlo random walk
simulations that are run in massively parallel on Nvidia's CUDA-capable GPUs. If
you use Disimpy in your work that leads to a scientific publication, please cite
[1]_, where the details about signal generation can also be found.

Requirements and installation
#############################

Please follow the `installation instructions
<https://disimpy.readthedocs.io/en/latest/installation.html>`_.
    
Usage example
#############

Please read the `tutorial
<https://disimpy.readthedocs.io/en/latest/tutorial.html>`_ to learn how to use
Disimpy.

Validation
##########

Disimpy has been validated by comparing its results to analytical solutions and
to the results from other simulators (e.g., `Camino
<http://camino.cs.ucl.ac.uk/>`_ and `MISST
<http://mig.cs.ucl.ac.uk/index.php?n=Tutorial.MISST>`_), and by automated
testing (:code:`disimpy.tests`). Examples of simulations used for validation are
provided `here <https://disimpy.readthedocs.io/en/latest/validation.html>`_.

Contribute
##########

If you want to contribute to the development of Disimpy or inform the developers
about problems or bugs, please read the `contributing guidelines
<https://disimpy.readthedocs.io/en/latest/contributing.html>`_.

Support
#######

If you have questions or need help, please open an `issue on Github
<https://github.com/kerkelae/disimpy/issues>`_.

References
==========

.. [1] Kerkel√§ et al., (2020). Disimpy: A massively parallel Monte Carlo
       simulator for generating diffusion-weighted MRI data in Python. Journal
       of Open Source Software, 5(52), 2527. https://doi.org/10.21105/joss.02527
